{"version":3,"sources":["service/error.tsx","service/sdk.ts","service/wallet.tsx","service/account.tsx","service/blockHeight.tsx","theme/Button.tsx","theme/ErrorMessage.tsx","theme/styles.ts","service/helpers.ts","theme/BlockHeight.tsx","theme/Header.tsx","theme/Loading.tsx","theme/PageLayout.tsx","components/ErrorLogic.tsx","components/Splash.tsx","config.ts","components/ContractList/ContractItem.tsx","components/ContractList/index.tsx","components/HeaderLogic.tsx","components/Form/fields/FormTextField.tsx","components/Form/validationSchema.ts","components/ContractLogic/StakeForm.tsx","components/ContractLogic/WithdrawForm.tsx","components/ContractLogic/Dashboard.tsx","components/ContractLogic/CreatePoll.tsx","components/ContractLogic/Instructions.tsx","components/ContractLogic/Loading.tsx","components/ContractLogic/PollUpdate.tsx","components/ContractLogic/PollItem.tsx","components/ContractLogic/PollList.tsx","components/ContractLogic/VotingDetails.tsx","components/ContractLogic/index.tsx","routes/contract.tsx","routes/index.tsx","serviceWorker.ts","index.tsx"],"names":["initError","callback","state","error","setError","err","toString","clearError","ErrorContext","React","useError","ErrorProvider","props","value","setValue","undefined","context","Provider","children","loadOrCreateMnemonic","key","loaded","localStorage","getItem","generated","Bip39","encode","Random","getBytes","setItem","burnerWallet","a","mnemonic","Secp256k1Pen","fromMnemonic","pen","pubkey","encodeSecp256k1Pubkey","address","pubkeyToAddress","signer","signBytes","sign","buildFeeTable","feeToken","gasPrice","stdFee","gas","denom","price","amount","Math","floor","upload","init","exec","send","httpUrl","client","SigningCosmWasmClient","defaultContext","loading","getClient","Error","CosmWasmContext","useSdk","BurnerWalletProvider","SdkProvider","config","loadWallet","useState","useEffect","then","wallet","connect","faucetUrl","getAccount","acct","balance","length","ky","post","json","ticker","console","catch","dummyRefresh","AccountContext","refreshAccount","useAccount","AccountProvider","account","BlockHeightContext","createContext","refreshBlockHeight","useBlockHeight","useContext","BlockHeightProvider","interval","setInterval","clearInterval","getHeight","blockHeight","useStyles","makeStyles","root","height","width","background","border","outline","borderRadius","padding","fontSize","fontWeight","color","boxShadow","Button","classes","disableElevation","disableFocusRipple","disableRipple","className","ErrorMessage","Alert","severity","onClose","AlertTitle","useBaseStyles","theme","createStyles","contractLogicContainer","display","flexDirection","alignItems","table","instructions","backdrop","zIndex","drawer","heading","card","margin","minWidth","listStyleType","breakpoints","up","marginBlockStart","marginBlockEnd","gridTemplateColumns","marginBottom","marginTop","dashboardContainer","position","justifyContent","appBar","spacing","marginLeft","flexGrow","flexShrink","drawerPaper","drawerContainer","overflow","content","listCard","textAlign","link","textDecoration","createPollDialog","createPollTitle","createPollForm","form","tokenOps","maxWidth","tokenForm","pollInput","quorumCol","tokenOpsInput","input","createPollCancel","createPollSubmit","createPollInput","bottomSpacer","printableCoin","coin","printableAmount","startsWith","slice","toUpperCase","Decimal","fromAtomics","toUscrt","parseFloat","BlockHeight","variant","ElevationScroll","trigger","useScrollTrigger","disableHysteresis","threshold","elevation","Header","map","join","printableBalance","href","rel","target","AppBar","Toolbar","to","IconButton","edge","ArrowBack","Loading","PageLayout","Grid","container","justify","item","xs","sm","md","ErrorLogic","Splash","codeId","ContractItem","label","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","defaultCodeId","ContractList","contracts","setContracts","getContracts","List","HeaderLogic","FormTextField","type","placeholder","disabled","InputProps","useField","field","meta","errorText","touched","TextField","id","helperText","fullWidth","WithdrawValidationSchema","Yup","shape","withdrawAmountField","min","StakeValidationSchema","stakeAmountField","CreatePollValidationSchema","descriptionField","max","required","quorumField","startHeightField","endHeightField","StakeForm","weightField","handleStake","tokenBalance","initialValues","validationSchema","onSubmit","setSubmitting","ex","handleSubmit","name","WithdrawForm","handleWithdraw","stakedBalance","Dashboard","FormLabel","String","filter","printableBalanceOf","coins","CreatePoll","handleCreatePoll","open","setOpen","handleClose","onClick","Dialog","aria-labelledby","DialogTitle","DialogContent","direction","FormControlLabel","control","labelPlacement","Instructions","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","Typography","Link","Backdrop","CircularProgress","PollUpdate","poll","handleTallyPoll","handleRefreshPoll","pollExpired","endHeight","pollInProgress","status","isPollCreator","creator","event","StyledTableCell","withStyles","head","body","TableCell","StyledTableRow","backgroundColor","palette","action","hover","TableRow","PollItem","handleCastVote","setState","validWeight","pollWeight","canCastVote","pollId","aria-label","size","align","onChange","preventDefault","weight","parseInt","handleWeightChange","component","scope","description","quorum","blocksRemaining","seconds","d","h","m","s","timeRemaining","PollList","polls","contractAddress","TableContainer","Paper","Table","TableHead","TableBody","Array","from","values","createPollData","startHeight","VotingDetails","enqueueSnackbar","useSnackbar","doStake","payment","execute","stake_voting_tokens","enqueueMessage","refreshTokenBalance","doWithdraw","withdrawMsg","withdraw_voting_tokens","doCastVote","vote","castVoteMsg","cast_vote","poll_id","doTallyPoll","tallyMsg","end_poll","result","attributes","logs","events","attribute","find","x","reason","set","loadPolls","pollCount","Map","i","queryContractSmart","res","quorum_percentage","end_height","start_height","token_stake","stake","poll_count","staked_tokens","token_balance","doRefreshPoll","doCreatePoll","createMessage","start","end","create_poll","message","Box","p","my","emptyInfo","owner","stakedTokens","ContractLogic","getContract","info","ContractSearch","useParams","Routes","basename","exact","path","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","registration","unregister","Component","rootEl","document","getElementById","ReactDOM","render","maxSnack"],"mappings":"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","file":"static/js/main.e66bd490.chunk.js","sourcesContent":["import * as React from \"react\";\n\n/*\nUgly to use a singleton to manage functions, but the issue is that we want to return the same\nsetError, clearError functions to the consumers, so they don't trigger new effects everytime\nwe update the error state, which can lead to an infinite loop:\n\nComponent.useEffect returns error, calls setError\nErrorProvider updates value and returns new closure for setError\nuseEffect is triggered again, with another error....\n\nWhen this is updated, we only want things to re-render that depend on the actual error value.\nThere may be cleaner ways to do this but encapsulating a singleton here seemed fine.\n(We can't rely on local variables that change each time ErrorProvider() is called).\n*/\n\nlet initError: string | undefined;\n\n// this should be set on first render\nlet callback = (state: State): void => {\n  // this is overriden on first render\n  initError = state.error;\n};\n\nfunction setError(err: any): void {\n  const error = typeof err === \"string\" ? err : err.toString();\n  callback({ error });\n}\n\nfunction clearError(): void {\n  callback({});\n}\n\n/** ****************/\n\nexport interface ErrorContextType {\n  readonly error?: string;\n  readonly setError: (err: string) => void;\n  readonly clearError: () => void;\n}\n\nconst defaultContext = (): ErrorContextType => {\n  return {\n    setError,\n    clearError,\n  };\n};\n\nexport const ErrorContext = React.createContext<ErrorContextType>(defaultContext());\n\nexport const useError = (): ErrorContextType => React.useContext(ErrorContext);\n\ninterface State {\n  readonly error?: string;\n}\n\nexport function ErrorProvider(props: { readonly children: any }): JSX.Element {\n  const [value, setValue] = React.useState<State>({});\n  callback = setValue;\n  // if there is an error before we render the first time, make sure we render it\n  if (initError) {\n    setValue({ error: initError });\n    initError = undefined;\n  }\n\n  const context: ErrorContextType = {\n    error: value.error,\n    setError,\n    clearError,\n  };\n\n  return <ErrorContext.Provider value={context}>{props.children}</ErrorContext.Provider>;\n}\n","import {\n  encodeSecp256k1Pubkey,\n  pubkeyToAddress,\n  Secp256k1Pen,\n  SigningCallback,\n  SigningCosmWasmClient,\n} from \"secretjs\";\nimport {FeeTable} from \"secretjs/types/signingcosmwasmclient\";\nimport { StdSignature } from \"secretjs/types/types\";\nimport { Bip39, Random } from \"@iov/crypto\";\n\n// generateMnemonic will give you a fresh mnemonic\n// it is up to the app to store this somewhere\nexport function generateMnemonic(): string {\n  return Bip39.encode(Random.getBytes(16)).toString();\n}\n\n// some code that will only work in a browser...\nexport function loadOrCreateMnemonic(): string {\n  const key = \"burner-wallet\";\n  const loaded = localStorage.getItem(key);\n  if (loaded) {\n    return loaded;\n  }\n  const generated = generateMnemonic();\n  localStorage.setItem(key, generated);\n  return generated;\n}\n\nexport interface ConnectResult {\n  readonly address: string;\n  readonly client: SigningCosmWasmClient;\n}\n\nexport interface Wallet {\n  readonly address: string;\n  readonly signer: SigningCallback;\n}\n\nexport async function burnerWallet(): Promise<Wallet> {\n  const mnemonic = loadOrCreateMnemonic();\n  const pen = await Secp256k1Pen.fromMnemonic(mnemonic);\n  const pubkey = encodeSecp256k1Pubkey(pen.pubkey);\n  const address = pubkeyToAddress(pubkey, \"secret\");\n  const signer = (signBytes: Uint8Array): Promise<StdSignature> => pen.sign(signBytes);\n  return { address, signer };\n}\n\nconst buildFeeTable = (feeToken: string, gasPrice: number): FeeTable => {\n  const stdFee = (gas: number, denom: string, price: number) => {\n    const amount = Math.floor(gas * price);\n    return {\n      amount: [{ amount: amount.toString(), denom: denom }],\n      gas: gas.toString(),\n    }\n  };\n\n  return {\n    upload: stdFee(1000000, feeToken, gasPrice),\n    init: stdFee(500000, feeToken, gasPrice),\n    exec: stdFee(200000, feeToken, gasPrice),\n    send: stdFee(80000, feeToken, gasPrice),\n  }\n};\n\n// this creates a new connection to a server at URL,\n// using a signing keyring generated from the given mnemonic\nexport async function connect(httpUrl: string, { address, signer }: Wallet): Promise<ConnectResult> {\n  const client = new SigningCosmWasmClient(httpUrl, address, signer, \n    undefined, buildFeeTable(\"uscrt\", 1));\n  return { address, client };\n}\n","import { SigningCosmWasmClient } from \"secretjs\";\nimport ky from \"ky\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport { AppConfig } from \"../config\";\nimport { useError } from \"./error\";\nimport { burnerWallet, connect, Wallet } from \"./sdk\";\n\nexport interface CosmWasmContextType {\n  readonly loading: boolean;\n  readonly address: string;\n  readonly getClient: () => SigningCosmWasmClient;\n}\n\nconst defaultContext: CosmWasmContextType = {\n  loading: true,\n  address: \"\",\n  getClient: (): SigningCosmWasmClient => {\n    throw new Error(\"not yet initialized\");\n  },\n};\n\nexport const CosmWasmContext = React.createContext<CosmWasmContextType>(defaultContext);\n\nexport const useSdk = (): CosmWasmContextType => React.useContext(CosmWasmContext);\n\nexport interface WalletProviderProps {\n  config: AppConfig;\n  children: any;\n}\n\nexport interface SdkProviderProps {\n  config: AppConfig;\n  loadWallet: () => Promise<Wallet>;\n  children: any;\n}\n\nexport function BurnerWalletProvider(props: WalletProviderProps): JSX.Element {\n  return (\n    <SdkProvider config={props.config} loadWallet={burnerWallet}>\n      {props.children}\n    </SdkProvider>\n  );\n}\n\nexport function SdkProvider(props: SdkProviderProps): JSX.Element {\n  const [value, setValue] = useState(defaultContext);\n  const { setError } = useError();\n\n  const { config, loadWallet } = props;\n\n  // just call this once on startup\n  useEffect(() => {\n    loadWallet()\n      .then(wallet => connect(config.httpUrl, wallet))\n      .then(async ({ address, client }) => {\n        // load from faucet if needed\n        if (config.faucetUrl) {\n          try {\n            const acct = await client.getAccount();\n            if (!acct?.balance?.length) {\n              await ky.post(config.faucetUrl, { json: { ticker: \"SCRT\", address } });\n            }\n          } catch(error) {\n            console.error(error)\n          }          \n        }\n\n        setValue({\n          loading: false,\n          address: address,\n          getClient: () => client,\n        });\n      })\n      .catch(setError);\n\n    // TODO: return a clean-up function???\n  }, [config.httpUrl, config.faucetUrl, loadWallet, setError]);\n\n  return <CosmWasmContext.Provider value={value}>{props.children}</CosmWasmContext.Provider>;\n}\n","import { Account } from \"@cosmjs/sdk38\";\nimport * as React from \"react\";\n\nimport { useError } from \"./error\";\nimport { useSdk } from \"./wallet\";\n\ninterface State {\n  readonly account?: Account;\n}\n\nexport interface AccountContextType extends State {\n  readonly refreshAccount: () => void;\n}\n\nfunction dummyRefresh(): void {}\n\nconst defaultContext = (): AccountContextType => {\n  return {\n    refreshAccount: dummyRefresh,\n  };\n};\n\nexport const AccountContext = React.createContext<AccountContextType>(defaultContext());\n\nexport const useAccount = (): AccountContextType => React.useContext(AccountContext);\n\nexport function AccountProvider(props: { readonly children: any }): JSX.Element {\n  const [value, setValue] = React.useState<State>({});\n  const { loading, getClient } = useSdk();\n  const { setError } = useError();\n\n  const refreshAccount = (): void => {\n    if (!loading) {\n      getClient()\n        .getAccount()\n        .then(account => setValue({ account }))\n        .catch(setError);\n    }\n  };\n\n  // this should just be called once on startup\n  React.useEffect(refreshAccount, [loading, getClient, setError]);\n\n  const context: AccountContextType = {\n    refreshAccount,\n    account: value.account,\n  };\n\n  return <AccountContext.Provider value={context}>{props.children}</AccountContext.Provider>;\n}\n","import { Account } from \"@cosmjs/sdk38\";\nimport React, { useState, useEffect } from 'react';\n\nimport { useError } from \"./error\";\nimport { useSdk } from \"./wallet\";\n\ninterface State {\n  readonly blockHeight?: number;\n}\n\nexport interface BlockHeightContextType extends State {\n  readonly refreshBlockHeight: () => void;\n}\n\nfunction dummyRefresh(): void {}\n\nconst defaultContext = (): BlockHeightContextType => {\n  return {\n    refreshBlockHeight: dummyRefresh,\n  };\n};\n\nexport const BlockHeightContext = React.createContext<BlockHeightContextType>(defaultContext());\n\nexport const useBlockHeight = (): BlockHeightContextType => React.useContext(BlockHeightContext);\n\nexport function BlockHeightProvider(props: { readonly children: any }): JSX.Element {\n  const [value, setValue] = React.useState<State>({});\n  const { loading, getClient } = useSdk();\n  const { setError } = useError();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshBlockHeight();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const refreshBlockHeight = (): void => {\n    if (!loading) {\n      getClient()\n        .getHeight()\n        .then(blockHeight => setValue({ blockHeight }))\n        .catch(setError);\n    }\n  };\n\n  // this should just be called once on startup\n  React.useEffect(refreshBlockHeight, [loading, getClient, setError]);\n\n  const context: BlockHeightContextType = {\n    refreshBlockHeight,\n    blockHeight: value.blockHeight,\n  };\n\n  return <BlockHeightContext.Provider value={context}>{props.children}</BlockHeightContext.Provider>;\n}\n","import MuiButton, { ButtonProps } from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\n\n// TODO: pick some better styles\nconst useStyles = makeStyles({\n  root: {\n    height: \"40px\",\n    width: \"100%\",\n    background: \"#ebf5fc\",\n    border: \"none\",\n    outline: \"none\",\n    borderRadius: \"20px\",\n    padding: \"5px 15px\",\n    fontSize: \"20px\",\n    fontWeight: 500,\n    color: \"#3d5af1\",\n    boxShadow: \"-2px -2px 6px rgba(255, 255, 255, 1), 2px 2px 6px rgba(0, 0, 0, 0.1)\",\n    \"&:hover\": {\n      boxShadow: \"-2px -2px 6px rgba(255, 255, 255, 1), 2px 2px 6px rgba(0, 0, 0, 0.1)\",\n      background: \"#ebf5fc\",\n    },\n    \"&:active\": {\n      boxShadow: \"inset -2px -2px 6px rgba(255, 255, 255, 1), inset 2px 2px 6px rgba(0, 0, 0, 0.1)\",\n      background: \"#ebf5fc\",\n    },\n  },\n});\n\n// This is a page body to display when there is an error\nexport function Button(props: ButtonProps): JSX.Element {\n  const classes = useStyles();\n  return <MuiButton disableElevation disableFocusRipple disableRipple className={classes.root} {...props} />;\n}\n","import { Alert, AlertTitle } from \"@material-ui/lab\";\nimport * as React from \"react\";\n\nexport interface ErrorMessageProps {\n  readonly error: string;\n  readonly clearError: () => void;\n}\n\n// This is a page body to display when there is an error\nexport function ErrorMessage({ error, clearError }: ErrorMessageProps): JSX.Element {\n  return (\n    <Alert severity=\"error\" onClose={clearError}>\n      <AlertTitle>Error</AlertTitle>\n      {error}\n    </Alert>\n  );\n}\n","import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nconst drawerWidth = 240;\n\nexport const useBaseStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    contractLogicContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    table: {\n      background: \"#ebf5fc\",\n      boxShadow: \"-5px -5px 15px rgba(255, 255, 255, 0.8), 5px 5px 10px rgba(0, 0, 0, 0.1)\",\n      borderRadius: \"25px\",\n    },\n    instructions: {\n      background: \"#ebf5fc\",\n      boxShadow: \"-5px -5px 15px rgba(255, 255, 255, 0.8), 5px 5px 10px rgba(0, 0, 0, 0.1)\",\n      borderRadius: \"25px\",\n    },\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n    heading: {\n      background: \"#ebf5fc\",\n      boxShadow: \"-5px -5px 15px rgba(255, 255, 255, 0.8), 5px 5px 10px rgba(0, 0, 0, 0.1)\",\n      borderRadius: \"25px\",\n    },\n    card: {\n      width: \"80vw\",\n      margin: \"10px\",\n      padding: \"20px\",\n      background: \"#ebf5fc\",\n      boxShadow: \"-5px -5px 15px rgba(255, 255, 255, 0.8), 5px 5px 10px rgba(0, 0, 0, 0.1)\",\n      borderRadius: \"25px\",\n      minWidth: \"800px\",\n      \"& ul\": {\n        listStyleType: \"none\",\n        padding: \"0\",\n        margin: \"0\",\n        [theme.breakpoints.up(\"sm\")]: {\n          marginBlockStart: \"1em\",\n          marginBlockEnd: \"1em\",\n        },\n      },\n      \"& li\": {\n        display: \"grid\",\n        gridTemplateColumns: \"1fr\",\n        fontSize: \".75em\",\n        \"& p:first-child\": {\n          marginBottom: \".2em\",\n        },\n        \"& p:last-child\": {\n          marginTop: \".2em\",\n        },\n        [theme.breakpoints.up(\"sm\")]: {\n          gridTemplateColumns: \"25% 75%\",\n          fontSize: \".9em\",\n          \"& p:first-child\": {\n            margin: \".5em 0.05em\",\n          },\n          \"& p:last-child\": {\n            margin: \".5em 0.05em\",\n          },\n        },\n        [theme.breakpoints.up(\"md\")]: {\n          gridTemplateColumns: \"20% 80%\",\n          fontSize: \"1em\",\n          \"& p:first-child\": {\n            margin: \".5em 0.1\",\n          },\n          \"& p:last-child\": {\n            margin: \".5em .1em\",\n          },\n        },\n      },\n      \"& li p:first-child\": {\n        color: \"#3d5af1\",\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"75vw\",\n        margin: \"20px\",\n        padding: \"30px 20px\",\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        width: \"60vw\",\n        padding: \"30px 40px\",\n      },\n    },\n    dashboardContainer: {\n      position: \"relative\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n    blockHeight: {      \n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(50),\n      flexGrow: 1,\n    },\n    account: {\n      padding: theme.spacing(1),\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    listCard: {\n      flexDirection: \"column-reverse\",\n      textAlign: \"center\",\n      width: \"95vw\",\n      margin: \"5px\",\n      padding: \"10px 5px\",\n      borderRadius: \"116px\",\n      background: \"#ebf5fc\",\n      boxShadow: \"-5px -5px 15px rgba(255, 255, 255, 0.8), 5px 5px 10px rgba(0, 0, 0, 0.1)\",\n      \"&:hover\": {\n        boxShadow: \"inset -5px -5px 10px rgba(255,255,255,0.5), inset 5px 5px 10px rgba(0,0,0,0.05)\",\n      },\n      \"& .MuiListItemText-secondary\": {\n        fontSize: \"13px\",\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"70vw\",\n        margin: \"20px\",\n        padding: \"30px 40px\",\n        \"& .MuiListItemText-secondary\": {\n          fontSize: \"14px\",\n        },\n      },\n      [theme.breakpoints.up(\"md\")]: {\n        flexDirection: \"row\",\n        textAlign: \"left\",\n        width: \"60vw\",\n        \"& .MuiListItemText-secondary\": {\n          fontSize: \"15px\",\n        },\n      },\n    },\n    link: {\n      textDecoration: \"none\",\n      color: \"#3d5af1\",\n    },\n    createPollDialog: {\n      background: \"#ebf5fc\",\n      height: \"550px\",\n    },\n    createPollTitle: {\n      background: \"#ebf5fc\",\n    },\n    createPollForm: {\n      background: \"#ebf5fc\",\n      boxShadow: \"-5px -5px 5px rgba(255, 255, 255, 0.8), 5px 5px 10px rgba(0, 0, 0, 0.1)\",\n      display: \"flex\",\n      justifyContent: \"space-around\",\n      padding: \"10px\",\n      \"& p\": {\n        fontSize: \"0.75rem\",\n      },\n      \"& .MuiFormHelperText-root.Mui-error\": {\n        marginTop: \"0\",\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"440px\",\n        width: \"350px\",\n        justifyContent: \"space-around\",\n        margin: \"20px\",\n        padding: \"20px\",\n        \"& p\": {\n          fontSize: \"1rem\",\n        },\n        \"& .MuiFormHelperText-root.Mui-error\": {\n          marginTop: \"3px\",\n        },\n      },\n    },\n    form: {\n      background: \"#ebf5fc\",\n      boxShadow: \"-5px -5px 15px rgba(255, 255, 255, 0.8), 5px 5px 10px rgba(0, 0, 0, 0.1)\",\n      borderRadius: \"25px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n      padding: \"10px\",\n      \"& p\": {\n        fontSize: \"0.75rem\",\n      },\n      \"& .MuiFormHelperText-root.Mui-error\": {\n        marginTop: \"0\",\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        height: \"250px\",\n        justifyContent: \"space-around\",\n        margin: \"20px\",\n        padding: \"20px\",\n        \"& p\": {\n          fontSize: \"1rem\",\n        },\n        \"& .MuiFormHelperText-root.Mui-error\": {\n          marginTop: \"3px\",\n        },\n      },\n    },\n    tokenOps: {\n      background: \"#ebf5fc\",\n      minWidth: \"130px\",\n      borderRadius: \"25px\",\n      maxWidth: \"200px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n      \n    },\n    tokenForm: {\n      background: \"#ebf5fc\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      \"& p\": {\n        fontSize: \"0.75rem\",\n      },\n      \"& .MuiFormHelperText-root.Mui-error\": {\n        marginTop: \"0\",\n      },\n      [theme.breakpoints.up(\"sm\")]: {\n        justifyContent: \"space-around\",\n        margin: \"5px\",\n        padding: \"10px\",\n        \"& p\": {\n          fontSize: \"1rem\",\n        },\n        \"& .MuiFormHelperText-root.Mui-error\": {\n          marginTop: \"3px\",\n        },\n      },\n    },\n    pollInput: {\n      display: \"flex\",\n      \"& input\": {\n        minWidth: \"100px\",\n      },\n    },\n    quorumCol: {\n      display: \"flex\",\n      minWidth: \"40px\",\n    },\n    tokenOpsInput: {\n      display: \"flex\",\n      \"& input\": {\n        height: \"30px\",\n        background: \"#ebf5fc\",\n        border: \"none\",\n        outline: \"none\",\n        borderRadius: \"20px\",\n        padding: \"5px 15px\",\n        fontSize: \"14px\",\n        color: \"#3d5af1\",\n        boxShadow: \"inset -2px -2px 6px rgba(255, 255, 255, 1), inset 2px 2px 6px rgba(0, 0, 0, 0.1);\",\n      },\n    },\n    input: {\n      display: \"flex\",\n      \"& input\": {\n        height: \"30px\",\n        width: \"100%\",\n        background: \"#ebf5fc\",\n        border: \"none\",\n        outline: \"none\",\n        borderRadius: \"20px\",\n        padding: \"5px 15px\",\n        fontSize: \"18px\",\n        color: \"#3d5af1\",\n        boxShadow: \"inset -2px -2px 6px rgba(255, 255, 255, 1), inset 2px 2px 6px rgba(0, 0, 0, 0.1);\",\n      },\n    },\n    createPollCancel: {\n        width: \"50%\",\n        color: \"secondary\",\n        padding: \"15px 15px\",\n    },\n    createPollSubmit: {\n        width: \"50%\",\n        padding: \"15px 15px\",\n    },\n    createPollInput: {\n      display: \"flex\",\n      \"& input\": {\n        height: \"25px\",\n        background: \"#ebf5fc\",\n        border: \"none\",\n        outline: \"none\",\n        padding: \"15px 15px\",\n        fontSize: \"14px\",\n        color: \"#3d5af1\",\n        boxShadow: \"inset -2px -2px 6px rgba(255, 255, 255, 1), inset 2px 2px 6px rgba(0, 0, 0, 0.1);\",\n      },\n    },\n    bottomSpacer: {\n      marginBottom: \"8px\",\n    },\n  }),\n);\n","import { types } from \"secretjs\";\nimport { Decimal } from \"@iov/encoding\";\n\n// NARROW NO-BREAK SPACE (U+202F)\nconst thinSpace = \"\\u202F\";\n\nexport function printableBalanceOf(denom: string, balance?: readonly types.Coin[]): string {\n  if (!balance || balance.length === 0) return \"–\";\n  const coin = balance.filter(coin => coin.denom === denom).map(printableCoin);\n  return coin.length > 0 ? coin[0] : \"\";\n}\n\nexport function printableBalance(balance?: readonly types.Coin[]): string {\n  if (!balance || balance.length === 0) return \"–\";\n  return balance.map(printableCoin).join(\", \");\n}\n\nexport function printableCoin(coin?: types.Coin): string {\n  if (!coin) {\n    return \"0\";\n  }\n  return printableAmount(coin.denom, coin.amount);\n}\n\nexport function printableAmount(denom: string, amount: string): string {\n  if (!amount) {\n    return \"0\";\n  }\n  if (denom.startsWith(\"u\")) {\n    const ticker = denom.slice(1).toUpperCase();\n    return Decimal.fromAtomics(amount, 6).toString() + thinSpace + ticker;\n  } else {\n    return amount + thinSpace + denom;\n  }\n}\n\nexport function toUscrt(amount: string): string {\n  return Math.floor(parseFloat(amount) * 10**6).toString()\n}\n","import React from 'react';\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport { useBaseStyles } from \"./styles\";\nimport { useBlockHeight } from \"../service\";\n\nexport function BlockHeight(): JSX.Element {\n  const classes = useBaseStyles();\n  const { blockHeight } = useBlockHeight();\n\n  return <MuiTypography  variant=\"h6\" className={classes.blockHeight}> Latest Block Height: {blockHeight} </MuiTypography>;\n}\n","import { Account } from \"@cosmjs/sdk38\";\nimport { AppBar, IconButton, Toolbar } from \"@material-ui/core\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useBaseStyles } from \"./styles\";\n\nimport { printableBalance } from \"../service/helpers\";\nimport { BlockHeight } from \"./BlockHeight\";\n\ninterface ElevationScrollProps {\n  readonly children: any;\n}\n\nfunction ElevationScroll(props: ElevationScrollProps): JSX.Element {\n  const { children } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    //   target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nexport interface HeaderProps {\n  readonly account?: Account;\n  readonly address?: String;\n  children?: React.ReactElement;\n}\n\n// Show the current account or any error message in the header\nexport function Header({ account, address, children }: HeaderProps, props: any): JSX.Element {\n    const balance = account ? printableBalance(account.balance) : (<span>\n          (No funds - Go get some{\" \"}\n          <a\n            href=\"https://faucet.secrettestnet.io\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            from the faucet\n          </a>\n          )\n      </span>);\n  const classes = useBaseStyles();\n\n  return (\n    <React.Fragment>\n      <ElevationScroll {...props}>\n        <AppBar position=\"fixed\" className={classes.appBar}>\n          <Toolbar>\n            <Link to=\"/\" className={classes.account}>\n              <IconButton edge=\"start\" color=\"inherit\">\n                <ArrowBack />\n              </IconButton>\n            </Link>\n            <MuiTypography variant=\"h6\">\n              {address} - {balance}\n            </MuiTypography>\n            <BlockHeight/>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <Toolbar />\n    </React.Fragment>\n  );\n}\n","import MuiTypography from \"@material-ui/core/Typography\";\nimport * as React from \"react\";\n\nexport function Loading(): JSX.Element {\n  return <MuiTypography variant=\"h2\">Loading Wallet...</MuiTypography>;\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport * as React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      height: \"102vh\",\n      background: \"#ebf5fc\",\n    },\n  }),\n);\n\ninterface Props {\n  readonly children: any;\n}\n\n// TODO: figure out a better grid system\nexport function PageLayout({ children }: Props): JSX.Element {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root} container spacing={3} justify=\"center\">\n      <Grid item xs={12} sm={10} md={8}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n","import * as React from \"react\";\n\nimport { useError } from \"../service\";\nimport { ErrorMessage } from \"../theme\";\n\nfunction ErrorLogic(): JSX.Element {\n  const { error, clearError } = useError();\n\n  if (error) {\n    return <ErrorMessage error={error} clearError={clearError} />;\n  } else {\n    return <div />;\n  }\n}\n\nexport default ErrorLogic;\n","import * as React from \"react\";\n\nimport { useSdk } from \"../service\";\nimport { Loading, PageLayout } from \"../theme\";\nimport ErrorLogic from \"./ErrorLogic\";\n\n// Splash is a container to either show a loading (splash) page, or render the app\n// with a given PageLayout\nfunction Splash(props: { readonly children: any }): JSX.Element {\n  const { loading } = useSdk();\n\n  if (loading) {\n    return (\n      <React.Fragment>\n        <Loading />\n        <ErrorLogic />\n      </React.Fragment>\n    );\n  } else {\n    return <PageLayout>{props.children}</PageLayout>;\n  }\n}\n\nexport default Splash;\n","export interface AppConfig {\n  readonly httpUrl: string;\n  readonly faucetUrl?: string;\n  // codeId is the wasm codeId for the name service contract on the given chain\n  readonly codeId: number;\n}\n\nconst local: AppConfig = {\n  httpUrl: \"http://localhost:1317\",\n  faucetUrl: \"http://localhost:8000/credit\",\n  codeId: 1,\n};\n\nconst demo: AppConfig = {\n  httpUrl: \"https://bootstrap.secrettestnet.io\",\n  faucetUrl: \"https://faucet.secrettestnet.io\",\n  codeId: 7,\n};\n\n// REACT_APP_LOCAL is set via `yarn start:local`\nconst isLocal = process.env.NODE_ENV !== \"production\" && !!process.env.REACT_APP_LOCAL;\n\nexport const config = isLocal ? local : demo;\n","import Avatar from \"@material-ui/core/Avatar\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useBaseStyles } from \"../../theme\";\n\nexport interface ContractItemProps {\n  readonly codeId: number;\n  /** Bech32 account address */\n  readonly address: string;\n  readonly creator: string;\n  readonly label: string;\n}\n\nexport function ContractItem({ address, label }: ContractItemProps): JSX.Element {\n  const classes = useBaseStyles();\n\n  return (\n    <div className={classes.dashboardContainer}>\n      <Link className={classes.link} to={`/contract/${address}`}>\n        <ListItem className={classes.listCard}>\n          <ListItemAvatar>\n            <Avatar>\n              <WorkIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={label} secondary={address} />\n        </ListItem>\n      </Link>\n    </div>\n  );\n}\n","import List from \"@material-ui/core/List\";\nimport * as React from \"react\";\n\nimport { config } from \"../../config\";\nimport { useError, useSdk } from \"../../service\";\nimport { ContractItem, ContractItemProps } from \"./ContractItem\";\n\nconst defaultCodeId = config.codeId;\n\nfunction ContractList(): JSX.Element {\n  const { getClient } = useSdk();\n  const { setError } = useError();\n\n  const [contracts, setContracts] = React.useState<readonly ContractItemProps[]>([]);\n  // get the contracts\n  React.useEffect(() => {\n    getClient()\n      .getContracts(defaultCodeId)\n      .then(contracts => setContracts(contracts))\n      .catch(setError);\n  }, [getClient, setError]);\n\n  return (\n    <List>\n      {contracts.map(props => (\n        <ContractItem {...props} key={props.address} />\n      ))}\n    </List>\n  );\n}\n\nexport default ContractList;\n","import * as React from \"react\";\n\nimport { useAccount, useSdk } from \"../service\";\nimport { Header } from \"../theme\";\n\n// HeaderLogic calculates the values to render the header component (which can be theme'd)\nfunction HeaderLogic(): JSX.Element {\n  const { account } = useAccount();\n  const { address } = useSdk();\n  return <Header account={account} address={address}/>;\n}\n\nexport default HeaderLogic;\n","import { TextField } from \"@material-ui/core\";\nimport { FieldAttributes, useField } from \"formik\";\nimport * as React from \"react\";\n\ninterface TextFieldProps {\n  name: string;\n  type: string;\n  placeholder?: string;\n  InputProps?: any;\n  disabled?: boolean;\n}\n\nexport const FormTextField: React.FC<TextFieldProps & FieldAttributes<{}>> = ({\n  type,\n  placeholder,\n  disabled,\n  InputProps,\n  ...props\n}: TextFieldProps) => {\n  const [field, meta] = useField<{}>(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n\n  if (type === \"number\") {\n    return (\n      <TextField\n        id=\"outlined-number\"\n        type={type}\n        label={placeholder}\n        InputProps={InputProps}\n        {...field}\n        helperText={errorText}\n        error={!!errorText}\n        disabled={disabled}\n      />\n    );\n  }\n\n  return (\n    <TextField\n      type={type}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      fullWidth\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n    />\n  );\n};\n","import * as Yup from \"yup\";\n\nexport const WithdrawValidationSchema = Yup.object().shape({\n  withdrawAmountField: Yup.number()\n    .min(0.000001, \"Invalid withdraw amount\"),\n});\n\nexport const StakeValidationSchema = Yup.object().shape({\n  stakeAmountField: Yup.number()\n    .min(0.000001, \"Invalid stake amount\"),\n});\n\nexport const CreatePollValidationSchema = Yup.object().shape({\n  descriptionField: Yup.string()\n    .min(3, \"Min length\")\n    .max(64, \"Max length\")\n    .required(\"Required\"),\n  quorumField: Yup.number()\n    .min(0, \"Invalid quorum\")\n    .max(100, \"Invalid quorum\")\n    .required(\"Required\"),\n  startHeightField: Yup.number(),\n  endHeightField: Yup.number()\n});\n\nexport const CastVoteValidationSchema = Yup.object().shape({\n  weightField: Yup.number()\n    .min(1, \"Invalid weight\")\n    .required(\"Weight required\"),\n});\n","import { Form, Formik } from \"formik\";\nimport * as React from \"react\";\nimport { toUscrt } from \"../../service/helpers\";\n\nimport { Button } from \"../../theme\";\nimport { useBaseStyles } from \"../../theme\";\nimport { FormValues } from \"../Form\";\nimport { FormTextField } from \"../Form/fields/FormTextField\";\nimport { StakeValidationSchema } from \"../Form/validationSchema\";\n\nexport const STAKE_AMOUNT_FIELD = \"stakeAmountField\";\n\ninterface StakeFormProps {\n  readonly tokenBalance?: number;\n  readonly handleStake: (values: FormValues) => void;\n}\n\nexport const StakeForm: React.FC<StakeFormProps> = ({ handleStake, tokenBalance }: StakeFormProps) => {\n  const classes = useBaseStyles();\n\n  return (\n    <Formik\n      initialValues={{\n        stakeAmountField: \"\",\n      }}\n      validationSchema={StakeValidationSchema}\n      onSubmit={async ({ stakeAmountField }, { setSubmitting }) => {\n        try {\n          stakeAmountField = toUscrt(stakeAmountField);\n          setSubmitting(true);\n          handleStake({ stakeAmountField });\n        } catch (ex) {\n          console.error(ex);\n        }\n      }}\n    >\n      {({ handleSubmit }) => (\n        <Form onSubmit={handleSubmit} className={classes.tokenForm}>\n          <div className={classes.tokenOpsInput}>\n            <FormTextField placeholder=\"0\" name={STAKE_AMOUNT_FIELD} type=\"text\"/>\n          </div>\n          <div>\n            <Button type=\"submit\" disabled={!tokenBalance}>\n              Stake\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { Form, Formik } from \"formik\";\nimport * as React from \"react\";\nimport { toUscrt } from \"../../service/helpers\";\n\nimport { Button } from \"../../theme\";\nimport { useBaseStyles } from \"../../theme\";\nimport { FormValues } from \"../Form\";\nimport { FormTextField } from \"../Form/fields/FormTextField\";\nimport { WithdrawValidationSchema } from \"../Form/validationSchema\";\n\nexport const WITHDRAW_AMOUNT_FIELD = \"withdrawAmountField\";\n\ninterface WithdrawFormProps {\n  readonly handleWithdraw: (values: FormValues) => void;\n  readonly stakedBalance?: number;\n}\n\nexport const WithdrawForm: React.FC<WithdrawFormProps> = ({ handleWithdraw, stakedBalance }: WithdrawFormProps) => {\n  const classes = useBaseStyles();\n\n  return (\n    <Formik\n      initialValues={{\n        withdrawAmountField: \"\",\n      }}\n      validationSchema={WithdrawValidationSchema}\n      onSubmit={async ({ withdrawAmountField }, { setSubmitting }) => {\n        // todo validate, staked >= withdraw amount etc etc\n        withdrawAmountField = toUscrt(withdrawAmountField);\n        setSubmitting(true);\n        handleWithdraw({ withdrawAmountField });\n      }}\n    >\n      {({ handleSubmit }) => (\n        <Form onSubmit={handleSubmit}  className={classes.tokenForm}>\n          <div className={classes.tokenOpsInput}>\n            <FormTextField placeholder=\"0\" name={WITHDRAW_AMOUNT_FIELD} type=\"text\" />\n          </div>\n          <div>\n            <Button type=\"submit\" disabled={!stakedBalance}>\n              Withdraw\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import * as React from \"react\";\nimport { coins } from \"@cosmjs/sdk38\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Grid from '@material-ui/core/Grid';\nimport { printableBalanceOf, printableAmount } from \"../../service/helpers\";\n\nexport interface DashboardProps {\n  readonly denom: string;\n  readonly tokenBalance?: number;\n  readonly stakedBalance?: number;\n}\n\nexport function Dashboard(props: DashboardProps): JSX.Element {\n  const { denom, tokenBalance, stakedBalance } = props;\n  \n  return (\n    <div>\n      <MuiTypography variant=\"h6\">\n        Dashboard\n      </MuiTypography>\n\n      <Grid container spacing={10} justify=\"space-between\">\n        <Grid item xs={6}>\n          <FormLabel>Total voting power: {stakedBalance && printableAmount(denom, String(stakedBalance | 0))}</FormLabel>\n        </Grid>\n        <Grid item xs={6}>\n          <FormLabel>My voting power: {tokenBalance && printableBalanceOf(denom, coins(tokenBalance | 0, denom))}</FormLabel>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import { Form, Formik } from \"formik\";\nimport * as React from \"react\";\n\nimport { Button } from \"../../theme\";\nimport { useBaseStyles } from \"../../theme\";\nimport { FormValues } from \"../Form\";\nimport { FormTextField } from \"../Form/fields/FormTextField\";\nimport { CreatePollValidationSchema } from \"../Form/validationSchema\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Grid from '@material-ui/core/Grid';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nexport const QUORUM_FIELD = \"quorumField\";\nexport const DESCRIPTION_FIELD = \"descriptionField\";\nexport const START_HEIGHT_FIELD = \"startHeightField\";\nexport const END_HEIGHT_FIELD = \"endHeightField\";\n\ninterface CreatePollProps {\n  readonly loading: boolean;\n  readonly handleCreatePoll: (values: FormValues) => void;\n}\n\nexport const CreatePoll: React.FC<CreatePollProps> = ({ handleCreatePoll, loading }: CreatePollProps) => {\n  const classes = useBaseStyles();\n  const [open, setOpen] = React.useState(false);\n  \n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n    return (\n        <div>\n            <Button type=\"submit\" disabled={loading} \n                onClick={handleClickOpen}>Create New Poll</Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle className={classes.createPollTitle} id=\"form-dialog-title\">Create New Poll</DialogTitle>\n                <DialogContent className={classes.createPollDialog}>\n                    <Formik\n                        initialValues={{\n                            quorumField: \"0\",\n                            descriptionField: \"\",\n                            startHeightField: \"\",\n                            endHeightField: \"\",\n\n                        }}\n                        validationSchema={CreatePollValidationSchema}\n                        onSubmit={async ({ quorumField, descriptionField, startHeightField, endHeightField }, { setSubmitting }) => {\n                        setSubmitting(true);\n                        handleCreatePoll({ quorumField, descriptionField, startHeightField, endHeightField });\n                        handleClose();\n                        }}\n                    >\n                        {({ handleSubmit }) => (\n                        <Form onSubmit={handleSubmit} className={classes.createPollForm}>\n                            <div className={classes.createPollInput}>\n                                <Grid container direction={\"row\"}>\n                                    <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={\n                                            <FormTextField placeholder=\"\" name={QUORUM_FIELD} type=\"number\" required={false} disabled={true}/>\n                                        }\n                                        label=\"Quorum\"\n                                        labelPlacement=\"end\"\n                                    />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FormControlLabel\n                                            control={\n                                                <FormTextField placeholder=\"\" name={DESCRIPTION_FIELD} type=\"text\" required={true}/>\n                                            }\n                                            label=\"Description\"\n                                            labelPlacement=\"end\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FormControlLabel\n                                            control={\n                                                <FormTextField placeholder=\"\" name={START_HEIGHT_FIELD} type=\"number\" />\n                                            }\n                                            label=\"Start height\"\n                                            labelPlacement=\"end\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FormControlLabel\n                                            control={\n                                                <FormTextField placeholder=\"\" name={END_HEIGHT_FIELD} type=\"number\" />\n                                            }\n                                            label=\"End height\"\n                                            labelPlacement=\"end\"\n                                        />\n                                    </Grid>\n                                    \n                                    <Grid item xs={5}>\n                                        <Button type=\"reset\" onClick={handleClose}>\n                                            Cancel\n                                        </Button>\n                                    </Grid>\n                                    <Grid item xs={5}>\n                                        <Button type=\"submit\" disabled={loading}>\n                                            Create\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                                </div>\n                        </Form>\n                        )}\n                    </Formik>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n  }\n","import React from 'react';\nimport { useBaseStyles } from \"../../theme\";\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport Link from \"@material-ui/core/Link\";\n\nexport interface InstructionsProps {\n}\n\nexport function Instructions(props: InstructionsProps): JSX.Element {\n  const classes = useBaseStyles();\n  \n  return (\n    <div>\n      <ExpansionPanel className={classes.instructions}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"instructions-content\"\n          id=\"instructions-header\"\n        >\n          <MuiTypography variant=\"h6\">\n            Instructions\n          </MuiTypography>\n          <HowToVoteIcon/>\n\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails >\n          <Typography>\n            Welcome to Privote, a privacy-first voting app on Secret Network. \n            <br></br>\n            This platform allows users to create pools with parameters like participation threshold (quorum) and vote duration. \n            <br></br>\n            Once a pool is created, any participant can stake SCRT to vote on the pool in a privacy-preserving manner. \n            <br></br>\n            This means users can prove they voted, but their vote will remain encrypted. Secret voting is critical for mitigating bribery attacks. \n            <br></br>\n            For more on secret voting and why you should care, please read our blog post (TBD)\n            <br></br>\n            <Link href=\"https://learn.scrt.network/questions.html\">\n              Secret Network FAQ\n            </Link>\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useBaseStyles } from \"../../theme\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nexport interface LoadingProps {\n  readonly loading: boolean;\n}\n\nexport function Loading(props: LoadingProps): JSX.Element {\n  const { loading } = props;\n  const classes = useBaseStyles();\n  \n  return (\n    <div>\n    <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { Poll } from \"./VotingDetails\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\n\nexport interface PollUpdateProps {\n    readonly poll: Poll;\n    readonly handleTallyPoll: (poll: Poll) => void;\n    readonly handleRefreshPoll: (poll: Poll) => void;\n    readonly loading: boolean;\n    readonly address: string;\n    readonly blockHeight: number;\n}\n\nexport function PollUpdate(props: PollUpdateProps): JSX.Element {\n    const { loading, address, poll, handleTallyPoll, handleRefreshPoll, blockHeight } = props;\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            handleRefreshPoll(poll)\n        }, 5000);\n        return () => clearInterval(interval);\n    }, []);\n\n    // creator can tally polls that are in progress\n    const canTallyPoll = () => {\n         return pollExpired() && !loading && isPollCreator() && pollInProgress();\n    };\n\n    const pollExpired = () => {\n        if (!poll.endHeight || poll.endHeight < blockHeight) {\n            return true;\n        }\n        return false;\n    }\n\n    const pollInProgress = () : boolean => {\n        return poll.status === \"InProgress\"\n    }\n\n    const isPollCreator = () : boolean => {\n        return poll.creator === address;\n    }\n\n    return (\n        <div>\n            { pollInProgress() &&\n                <IconButton\n                    type=\"submit\" disabled={!canTallyPoll()}\n                    onClick={(event) => handleTallyPoll(poll)}\n                > \n                    <AssignmentTurnedInIcon/> Tally\n                </IconButton>\n            }\n        </div>\n    );\n}\n","import React from 'react';\nimport { useBaseStyles } from \"../../theme\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { useSdk } from \"../../service\";\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport { Poll } from \"./VotingDetails\";\nimport { TextField } from \"@material-ui/core\";\nimport { PollUpdate } from \"./PollUpdate\";\nimport { toUscrt } from \"../../service/helpers\";\n\nexport const WEIGHT_FIELD = \"weightField\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n      fontSize: 15,\n      fontWeight: \"bold\"\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nexport interface PollItemProps {\n  readonly contractAddress: string;\n  readonly poll: Poll;\n  readonly loading: boolean;\n  readonly blockHeight: number;\n  readonly stakedBalance: number;\n  readonly handleCastVote: (vote: string, poll: Poll, weight: number) => void;\n  readonly handleTallyPoll: (poll: Poll) => void;\n  readonly handleRefreshPoll: (poll: Poll) => void;\n}\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport interface State {\n    pollWeight?: number;\n}\n\nexport function PollItem(props: PollItemProps): JSX.Element {\n  const classes = useBaseStyles();\n  const { address } = useSdk();\n  const { handleCastVote, handleTallyPoll, handleRefreshPoll, \n    loading, poll, blockHeight, stakedBalance } = props;\n  const [state, setState] = React.useState<State>({ });\n\n  const handleYesVote = () => {\n      const vote = \"yes\";\n      if (validWeight() && !pollExpired() && state.pollWeight) {\n        handleCastVote(vote, poll, state.pollWeight);\n      }\n  };\n\n  const handleNoVote = () => {\n      const vote = \"no\";\n      if (validWeight() && !pollExpired() && state.pollWeight) {\n        handleCastVote(vote, poll, state.pollWeight);\n      }\n  };\n\n  const pollExpired = () => {\n    if (!poll.endHeight) {\n      return false;\n    } else if (poll.endHeight <= blockHeight) {\n      return true;\n    }\n    return false;\n  }\n\n  const timeRemaining = () => {\n      if (poll.endHeight) {\n\n        const blocksRemaining = poll.endHeight - blockHeight;\n\n        if (blocksRemaining > 0) {\n          const blockTime = 6; // todo block time\n          const seconds = blocksRemaining * blockTime;\n          const d = Math.floor(seconds / (3600*24));\n          const h = Math.floor(seconds % (3600*24) / 3600);\n          const m = Math.floor(seconds % 3600 / 60);\n          const s = Math.floor(seconds % 60);\n\n          if (d > 0) {\n            return `~${d} days ${h}h`;\n          } else {\n            return `${h}h ${m}m ${s}s`;\n          }\n        } else {\n          return \"\";\n        }\n      }\n  }\n\n  const getQuorum = () => {\n    // todo include current quorum status, maybe as a progress bar and 5% / 20%\n    if (!poll.quorum) {\n      return \"none\";\n    } else {\n      return `${poll.quorum}%`;\n    }\n  }\n\n  const validWeight = () => {\n    if (!stakedBalance || !state.pollWeight) {\n      return false;\n    } else {\n      return state.pollWeight <= stakedBalance\n    }\n  }\n\n  const canCastVote = () => {\n    const pollWeight = state.pollWeight;\n    if (!pollExpired() && pollWeight && poll.status === \"InProgress\") {\n        return true;\n    } else {\n        return false;\n    }\n  };\n\n  const handleWeightChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) : void => {\n      event.preventDefault();\n      const weight = toUscrt(event.target.value);\n      \n      if (weight && parseInt(weight) > 0 && parseInt(weight) <= stakedBalance) {\n        setState({pollWeight: parseInt(weight)});\n      }\n  }\n\n  return (\n    <StyledTableRow key={poll.pollId}>\n        <StyledTableCell>\n            <IconButton disabled={!canCastVote()}\n            color=\"primary\" onClick={handleYesVote} aria-label=\"Yea\">\n                <ThumbUpIcon/>\n            </IconButton>\n            <IconButton disabled={!canCastVote()}\n                color=\"secondary\" onClick={handleNoVote} aria-label=\"Nay\">\n                <ThumbDownIcon/>\n            </IconButton>\n        </StyledTableCell>\n        <StyledTableCell size=\"small\" align=\"left\">\n            <TextField className={classes.pollInput} \n                name={WEIGHT_FIELD} type=\"number\" \n                disabled={poll.status !== \"InProgress\"}\n                onChange={(event) => handleWeightChange(event)}/>\n        </StyledTableCell>\n        <StyledTableCell align=\"left\" component=\"th\" scope=\"row\">\n            {poll.description}\n        </StyledTableCell>\n        <StyledTableCell align=\"right\">{getQuorum()}\n          </StyledTableCell>\n        <StyledTableCell align=\"right\">{timeRemaining()}</StyledTableCell>\n        <StyledTableCell align=\"right\">{poll.status}</StyledTableCell>\n        <StyledTableCell align=\"right\">\n            <PollUpdate address={address} handleTallyPoll={handleTallyPoll} blockHeight={blockHeight}\n            loading={loading} handleRefreshPoll={handleRefreshPoll} poll={poll}\n            />\n        </StyledTableCell>\n    </StyledTableRow>\n  );\n}","import React, { useEffect } from 'react';\nimport { useBaseStyles } from \"../../theme\";\nimport { useBlockHeight } from \"../../service\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Poll } from \"./VotingDetails\";\nimport { PollItem } from \"./PollItem\";\n\nexport const WEIGHT_FIELD = \"weightField\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n      fontSize: 15,\n      fontWeight: \"bold\"\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nexport interface PollListProps {\n  readonly contractAddress: string;\n  readonly stakedBalance: number;\n  readonly polls: Map<number, Poll>;\n  readonly loading: boolean;\n  readonly handleCastVote: (vote: string, poll: Poll, weight: number) => void;\n  readonly handleTallyPoll: (poll: Poll) => void;\n  readonly handleRefreshPoll: (poll: Poll) => void;\n}\n\nexport function PollList(props: PollListProps): JSX.Element {\n  const classes = useBaseStyles();\n  const { blockHeight, refreshBlockHeight } = useBlockHeight();\n  const { handleCastVote, handleTallyPoll, handleRefreshPoll, loading, polls, contractAddress, stakedBalance } = props;\n\n  // refresh the block height, do this less frequently in real life\n  useEffect(() => {\n    const interval = setInterval(() => {\n      refreshBlockHeight();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n      <div>\n        <TableContainer component={Paper}>\n        <Table className={classes.table} size=\"small\" aria-label=\"List of polls\">\n            <TableHead>\n            <TableRow>\n                <StyledTableCell>Vote</StyledTableCell>\n                <StyledTableCell align=\"left\">Weight</StyledTableCell>\n                <StyledTableCell align=\"left\">Description</StyledTableCell>\n                <StyledTableCell align=\"right\">Quorum</StyledTableCell>\n                <StyledTableCell align=\"right\">Time remaining</StyledTableCell>\n                <StyledTableCell align=\"right\">Status</StyledTableCell>\n                <StyledTableCell align=\"right\"></StyledTableCell>\n            </TableRow>\n            </TableHead>\n            <TableBody>\n                {Array.from(polls.values()).map((poll: Poll) => (\n                  <PollItem stakedBalance={stakedBalance}\n                    contractAddress={contractAddress} \n                    poll={poll} loading={loading}\n                    handleCastVote={handleCastVote} \n                    handleRefreshPoll={handleRefreshPoll}\n                    handleTallyPoll={handleTallyPoll} \n                    blockHeight={blockHeight || 0}/>\n                ))}\n            </TableBody>\n        </Table>\n        </TableContainer>\n    </div>\n  );\n}","import { coin } from \"@cosmjs/sdk38\";\nimport MuiTypography from \"@material-ui/core/Typography\";\nimport * as React from \"react\";\nimport { STAKE_AMOUNT_FIELD, StakeForm } from \"./StakeForm\";\nimport { WITHDRAW_AMOUNT_FIELD, WithdrawForm } from \"./WithdrawForm\";\nimport { useAccount, useError, useSdk } from \"../../service\";\nimport { useBaseStyles } from \"../../theme\";\nimport { FormValues } from \"../Form\";\nimport { Dashboard } from \"./Dashboard\";\nimport { QUORUM_FIELD, DESCRIPTION_FIELD, START_HEIGHT_FIELD, END_HEIGHT_FIELD, CreatePoll } from \"./CreatePoll\";\nimport { useSnackbar, VariantType } from 'notistack';\nimport Grid from '@material-ui/core/Grid';\nimport { Instructions } from \"./Instructions\";\nimport { Loading } from \"./Loading\";\nimport Box from '@material-ui/core/Box';\nimport { PollList } from \"./PollList\";\n\nexport interface CreatePollMsg {\n  quorum_percentage: number;\n  readonly description: string;\n  start_height?: number;\n  end_height?: number;\n}\n\nexport interface VotingDetailsProps {\n  readonly contractAddress: string;\n  readonly denom: string;\n  readonly owner: string;\n}\n\nexport interface State {\n  readonly owner?: string;\n  readonly loading: boolean;\n  readonly pollCount?: number;\n  readonly stakedBalance?: number;\n  readonly tokenBalance?: number;\n  readonly polls?: Map<number, Poll>;\n}\n\nfunction createPollData(pollId: number, creator: string, description: string, \n  quorum: number, status: string, startHeight: number, endHeight: number) {\n    const poll: Poll = {pollId, creator, description, quorum, status, \n    startHeight, endHeight};\n    return poll;\n}\n\nexport interface Poll {\n    readonly pollId: number;\n    readonly vote?: string;\n    readonly creator: string;\n    readonly stake?: number;\n    readonly description: string;\n    readonly quorum?: number;\n    readonly endHeight?: number;\n    readonly startHeight?: number;\n    readonly result?: string;\n    status?: string;\n}\n\nexport function VotingDetails(props: VotingDetailsProps): JSX.Element {\n  const classes = useBaseStyles();\n  const { contractAddress, denom } = props;\n  const { address, getClient } = useSdk();\n  const { setError } = useError();\n  const { refreshAccount } = useAccount();\n  \n  const { enqueueSnackbar } = useSnackbar();\n\n  const [state, setState] = React.useState<State>({ loading: false });\n\n  const doStake = async (values: FormValues): Promise<void> => {\n\n    setState({ ...state, loading: true });\n    \n    const payment = [coin(parseInt(values[STAKE_AMOUNT_FIELD]) || 0, denom || \"\")];\n\n    try {\n      await getClient().execute(\n        contractAddress,\n        { stake_voting_tokens: { } },\n        \"\",\n        payment,\n      );\n      enqueueMessage('Staked tokens', 'success');\n      await refreshTokenBalance();\n      refreshAccount();\n      \n    } catch (err) {\n      setError(err);\n      setState({ ...state, loading: false });\n    }\n  };\n\n  const doWithdraw = async (values: FormValues): Promise<void> => {\n    const amount = values[WITHDRAW_AMOUNT_FIELD] || \"0\";\n    setState({ ...state, loading: true });\n\n    let withdrawMsg = { withdraw_voting_tokens: { } }\n\n    if (parseInt(amount) > 0) {\n      withdrawMsg = { withdraw_voting_tokens: { amount } }\n    }\n    enqueueMessage('Withdrew tokens', 'success');\n\n    try {\n      await getClient().execute(\n        contractAddress,\n        withdrawMsg\n      );\n      refreshAccount();\n      refreshTokenBalance();\n      setState({ ...state, loading: false });\n    } catch (err) {\n      setError(err);\n      setState({ ...state, loading: false });\n    }\n  };\n\n  const doCastVote = async (vote: string, poll: Poll, weight: number): Promise<void> => {\n    let castVoteMsg = { cast_vote: { weight: String(weight), vote: vote, poll_id: poll.pollId } }\n    \n    setState({ ...state, loading: true });\n    try {\n      await getClient().execute(\n        contractAddress,\n        castVoteMsg\n      );\n      enqueueMessage('Vote cast', 'success');\n      \n      refreshAccount();\n      setState({ ...state, loading: false });\n    } catch (err) {\n      setError(err);\n      setState({ ...state, loading: false });\n    }\n  };\n\n  const doTallyPoll = async (poll: Poll): Promise<void> => {\n    let tallyMsg = { end_poll: { poll_id: poll.pollId } }\n    \n    setState({ ...state, loading: true });\n    try {\n      const result = await getClient().execute(contractAddress, tallyMsg);\n      const attributes = result.logs[0].events[1].attributes;\n      let attribute = attributes.find(x => x.key === \"passed\");\n      const passed = attribute && attribute.value === \"true\";\n      if (!passed) {\n        attribute = attributes.find(x => x.key === \"rejected_reason\");\n        const reason = attribute && attribute.value;\n        enqueueMessage(`Poll rejected: ${reason}`, 'error');\n        poll.status = reason;\n      } else {\n        poll.status = \"Passed\";\n        enqueueMessage('Poll passed', 'success');\n      }\n      \n      state.polls?.set(poll.pollId, poll);\n      \n      refreshAccount();\n\n      setState({ ...state, loading: false });\n    } catch (err) {\n      setError(err);\n      setState({ ...state, loading: false });\n    }\n  }\n\n  const loadPolls = async (pollCount: number, stakedBalance: number, tokenBalance: number): Promise<void> => {\n    let polls: Map<number, Poll> = new Map();\n\n    setState({ ...state, loading: true });\n\n    var i: number;\n    for (i = pollCount; i > 0; i--) {\n        let pollId = i;\n        await getClient()\n        /* eslint-disable-next-line @typescript-eslint/camelcase */\n          .queryContractSmart(contractAddress, { poll: { poll_id: pollId} })\n          .then(res => {\n              const creator = res.creator;\n              const status = res.status;\n              const quorum = res.quorum_percentage;\n              const description = res.description;\n              const endHeight = res.end_height;\n              const startHeight = res.start_height;\n              polls.set(pollId, createPollData(\n                pollId, creator, description, quorum, status, startHeight, endHeight\n              ));\n          })\n          .catch(err => {\n              setError(err);\n          });\n    }\n    setState({...state, polls: polls, loading: false, stakedBalance, tokenBalance, pollCount});\n  };\n\n  React.useEffect(() => {\n    setState({ loading: true});\n    \n    getClient()\n      /* eslint-disable-next-line @typescript-eslint/camelcase */\n      .queryContractSmart(contractAddress, { token_stake: { address } })\n      .then(res => {\n          return res\n      }).then((stake) => {\n        getClient()\n          .queryContractSmart(contractAddress, { config: { } })\n          .then(res => {\n            loadPolls(res.poll_count, res.staked_tokens, stake.token_balance);\n          })\n      })\n      .catch(err => {\n        setState({ ...state, loading: false });\n        setError(err);\n      });\n  }, [contractAddress]);\n\n\n  /**\n   * Refresh the user's token balance on the current contract\n   */\n  const refreshTokenBalance = async (): Promise<void> => {\n    \n    await getClient()\n      /* eslint-disable-next-line @typescript-eslint/camelcase */\n      .queryContractSmart(contractAddress, { token_stake: { address } })\n      .then(config => {\n        getClient()\n          .queryContractSmart(contractAddress, { config: { } })\n          .then(res => {\n            loadPolls(res.poll_count, res.staked_tokens, config.token_balance);\n          })\n      })\n      .catch(err => {\n        setState({ ...state, loading: false });\n        setError(err);\n      });\n  };\n\n  const doRefreshPoll = async (poll: Poll) : Promise<void> => {\n    await getClient()\n        /* eslint-disable-next-line @typescript-eslint/camelcase */\n      .queryContractSmart(contractAddress, { poll: { poll_id: poll.pollId} })\n      .then(res => {\n          poll.status = res.status;\n      })\n      .catch(err => {\n          setError(err);\n      });\n  }\n\n  const doCreatePoll = async (values: FormValues): Promise<void> => {\n    const quorum = values[QUORUM_FIELD];\n    const description = values[DESCRIPTION_FIELD];\n    const startHeight = values[START_HEIGHT_FIELD];\n    const endHeight = values[END_HEIGHT_FIELD];\n    \n    let blockHeight = await getClient().getHeight();\n\n    if (endHeight && parseInt(endHeight) > 0){\n      if (!blockHeight) {\n        setError(\"Failed to create poll, error getting block height\")\n        return;\n      } else if (blockHeight > parseInt(endHeight)) {\n        setError(\"Poll cannot end in the past\");\n        return;\n      }\n    }\n\n    setState({ ...state, loading: true });\n\n    let createMessage: CreatePollMsg = {quorum_percentage: parseInt(quorum), description}\n    \n    let start: number;\n    let end: number;\n\n    if (startHeight) {\n      start = parseInt(startHeight);\n      createMessage.start_height = start;\n    } \n    if (endHeight) {\n      end = parseInt(endHeight)\n      createMessage.end_height = end;\n    } \n\n    try {\n      const result = await getClient().execute(\n        props.contractAddress,\n        {create_poll: createMessage}\n      );\n      const attribute = result.logs[0].events[1].attributes.find(x => x.key === \"poll_id\");\n      \n      if (attribute === undefined) {\n        setState({ ...state, loading: false });\n        // todo get error from logs\n        setError(\"failed to create poll\");\n        return;\n      }\n      enqueueMessage('Poll created', 'success');\n\n      const pollId: number = parseInt(attribute.value);\n      await getClient()\n        /* eslint-disable-next-line @typescript-eslint/camelcase */\n        .queryContractSmart(contractAddress, { poll: { poll_id: pollId} })\n        .then(res => {\n            const creator = res.creator;\n            const status = res.status;\n            const quorum = res.quorum_percentage;\n            const description = res.description;\n            const polls: Map<number, Poll> = state.polls || new Map();\n            polls.set(pollId, createPollData(\n                pollId, creator, description, quorum, status, res.start_height, res.end_height\n              )\n            );\n            setState({ ...state, polls: polls });\n        })\n        .catch(err => {\n            setError(err);\n        });\n    } catch (err) {\n      setError(err);\n    }\n\n    setState({ ...state, loading: false });\n  }\n  function enqueueMessage(message: string, variant?: VariantType): void {\n    enqueueSnackbar(message, { variant });\n  }\n\n  return (\n    <Box width=\"100%\">\n      <Box width=\"100%\" p={1} my={0.5}>\n        <Instructions/>\n      </Box>\n      <div className={classes.card}>\n        <Loading loading={state.loading}/>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            {denom && \n              <Dashboard denom={denom} \n                stakedBalance={state.stakedBalance} \n                tokenBalance={state.tokenBalance}\n                />\n            }\n          </Grid>\n          <Grid item xs={12}>\n            <CreatePoll handleCreatePoll={doCreatePoll} loading={state.loading}/>\n          </Grid>\n          <Grid item xs={2}>\n            <Grid container spacing={1} className={classes.tokenOps}>\n                  <MuiTypography variant=\"h6\">\n                    Token Operations:\n                  </MuiTypography>\n                <Grid item xs={12}>\n                  <StakeForm handleStake={doStake} \n                    tokenBalance={state.tokenBalance}/>\n                </Grid>\n                <Grid item xs={12}>\n                  <WithdrawForm handleWithdraw={doWithdraw} \n                    stakedBalance={state.stakedBalance}\n                    />\n                </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={10}>   \n            {state.polls && state.stakedBalance &&\n              <PollList contractAddress={contractAddress} polls={state.polls} \n                stakedBalance={state.stakedBalance}\n                loading={state.loading} handleTallyPoll={doTallyPoll} \n                handleCastVote={doCastVote} handleRefreshPoll={doRefreshPoll}/>\n            }\n          </Grid>\n        </Grid>\n\n      </div>\n    </Box>\n  );\n}\n","import * as React from \"react\";\n\nimport { useError, useSdk } from \"../../service\";\nimport { VotingDetails } from \"./VotingDetails\";\n\nexport interface ContractDetailsProps {\n  readonly address: string;\n  readonly name?: string;\n}\n\nconst emptyInfo: State = {\n  address: \"\",\n  owner: \"\",\n  stakedTokens: 0,\n  pollCount: 0,\n  denom: \"\",\n};\n\ntype State = { \n  readonly address: string,\n  readonly owner?: string,\n  readonly stakedTokens?: number,\n  readonly pollCount?: number,\n  denom?: \"\",\n};\n\nfunction ContractLogic({ address }: ContractDetailsProps): JSX.Element {\n  const { getClient } = useSdk();\n  const { setError } = useError();\n  \n\n  const [value, setValue,] = React.useState<State>(emptyInfo);\n\n  // get the contracts\n  React.useEffect(() => {\n    getClient()\n      .getContract(address)\n      .then(info => {\n          setValue({ ...info, address})\n          getClient()\n          /* eslint-disable-next-line @typescript-eslint/camelcase */\n          .queryContractSmart(address, { config: { } })\n          .then(res => {\n            setValue({ \n              address: address,\n              stakedTokens: res.staked_tokens,\n              pollCount: res.poll_count,\n              denom: res.denom,\n              })\n          });\n        }\n      )\n      .catch(setError);\n  }, [setError, address, getClient]);\n\n  return (\n    <div>\n      {value.denom &&\n        <div>\n          <VotingDetails contractAddress={address} owner={value.owner || \"\"} denom={value.denom} />\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default ContractLogic;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\n\nimport ContractLogic from \"../components/ContractLogic\";\n\nfunction ContractSearch(): JSX.Element {\n  const { address } = useParams();\n\n  return <ContractLogic address={address || \"\"} />;\n}\n\nexport default ContractSearch;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport ContractList from \"../components/ContractList\";\nimport ErrorLogic from \"../components/ErrorLogic\";\nimport HeaderLogic from \"../components/HeaderLogic\";\nimport ContractSearch from \"./contract\";\n\nconst Routes = (): JSX.Element => (\n  <HashRouter basename=\"/\">\n    <HeaderLogic />\n    <ErrorLogic />\n    <Switch>\n      <Route exact path=\"/\" component={ContractList} />\n      <Route exact path=\"/contract/:address\" component={ContractSearch} />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Routes;\n","/* eslint-disable no-console */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): Promise<void> {\n  return navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): Promise<void> {\n  // Check if the service worker can be found. If it can't reload the page.\n  return fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport async function unregister(): Promise<void> {\n  if (\"serviceWorker\" in navigator) {\n    await navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Splash from \"./components/Splash\";\nimport { config } from \"./config\";\nimport Routes from \"./routes\";\nimport { AccountProvider, BurnerWalletProvider, ErrorProvider, BlockHeightProvider } from \"./service\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { SnackbarProvider } from 'notistack';\n\nconst rootEl = document.getElementById(\"root\");\n\nconst render = (Component: React.ComponentType): void => {\n  ReactDOM.render(\n    <SnackbarProvider maxSnack={3}>\n      <ErrorProvider>\n        <BurnerWalletProvider config={config}>\n          <BlockHeightProvider>\n            <AccountProvider>\n              <Splash>\n                <Component />\n              </Splash>\n            </AccountProvider>\n          </BlockHeightProvider>\n        </BurnerWalletProvider>\n      </ErrorProvider>\n    </SnackbarProvider>,\n    rootEl,\n  );\n};\n\nrender(Routes);\n\nif ((module as any).hot) {\n  (module as any).hot.accept(\"./routes\", (): void => {\n    const NextApp = require(\"./routes\").default;\n    render(NextApp);\n  });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}